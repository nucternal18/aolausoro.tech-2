# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: self-hosted

    strategy:
      matrix:
        node-version: [20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Create .env file
        run: |
          touch .env
          echo MONGODB_URI=${{ secrets.MONGODB_URI }} >> .env
          cat .env
      - name: Create .env.local file
        run: |
          touch .env.local
          echo USER_EMAIL=${{ secrets.USER_EMAIL }} >> .env.local
          echo USER_PASS=${{ secrets.USER_PASS }} >> .env.local
          echo CLOUDINARY_NAME=${{ secrets.CLOUDINARY_NAME }} >> .env.local
          echo CLOUDINARY_API_KEY=${{ secrets.CLOUDINARY_API_KEY }} >> .env.local
          echo CLOUDINARY_API_SECRET=${{ secrets.CLOUDINARY_API_SECRET }} >> .env.local
          echo NEXT_TELEMETRY_DISABLED=${{ secrets.NEXT_TELEMETRY_DISABLED }} >> .env.local
          echo SENTRY_DSN=${{ secrets.SENTRY_DSN }} >> .env.local
          echo SENTRY_AUTH_API=${{ secrets.SENTRY_AUTH_API }} >> .env.local
          echo GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }} >> .env.local
          echo GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }} >> .env.local
          echo NEXTAUTH_URL=${{ secrets.NEXTAUTH_URL }} >> .env.local
          echo MONGODB_URI=${{ secrets.MONGODB_URI }} >> .env.local
          echo NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }} >> .env.local
          echo JWT_SIGNING_PRIVATE_KEY=${{ secrets.JWT_SIGNING_PRIVATE_KEY }} >> .env.local
          echo NEXT_PUBLIC_RECAPTCHA_SITE_KEY=${{ secrets.NEXT_PUBLIC_RECAPTCHA_SITE_KEY }} >> .env.local
          echo RECAPTCHA_SITE_KEY=${{ secrets.RECAPTCHA_SITE_KEY }} >> .env.local
          echo REPO_TOKEN=${{ secrets.REPO_TOKEN }} >> .env.local
          echo RESEND_API_KEY=${{ secrets.RESEND_API_KEY }} >> .env.local
          echo EMAIL_SERVER_USER=${{ secrets.EMAIL_SERVER_USER }} >> .env.local
          echo EMAIL_SERVER_PASSWORD=${{ secrets.EMAIL_SERVER_PASSWORD }} >> .env.local
          echo EMAIL_SERVER_HOST=${{ secrets.EMAIL_SERVER_HOST }} >> .env.local
          echo EMAIL_SERVER_PORT=${{ secrets.EMAIL_SERVER_PORT }} >> .env.local
          echo EMAIL_FROM=${{ secrets.EMAIL_FROM }} >> .env.local
          cat .env.local
      - name: Create .sentryclirc file
        run: |
          touch .sentryclirc
          echo [auth] >> .sentryclirc
          echo token=${{ secrets.SENTRY_AUTH_API }} >> .sentryclirc
          cat .sentryclirc
      - name: Cache multiple paths
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-v3-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm install
      - name: Run ESLint
        run: npm run lint
      # - run: yarn test
      - name: Generate prisma client
        run: npm run generate
      - name: Build
        run: npm run build
      - name: Restart pm2
        run: pm2 reload client --watch
    env:
      CI: true
